cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
set.seed(123)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
casemeasures=foreach (i=1:length(a),.combine=rbind) %dopar% {
event=x[a[i]:b[i]]
measures(event)
}
tranmeasures=matrix(0,length(a),dim(casemeasures)[2])
for (i in 1:dim(casemeasures)[2]){
x=casemeasures[,i]
if (min(x,na.rm=TRUE)<=0){
x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)
}else{
x=x}
tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}
k0=4
pc.cr <- princomp(scale(tranmeasures))
ratio_kmeans=rep(NA,100)
for (i in 1:100){
assign(paste('cc',i,sep=''),kmeans(pc.cr$scores[, 1:5],k0,iter.max=1000))
ratio_kmeans[i]=get(paste('cc',i,sep=''))$tot.withinss/get(paste('cc',i,sep=''))$totss}
index=which.min(ratio_kmeans)
cc=get(paste('cc',index,sep=''))
myclkm=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=myclkm+1,main='PCA plots for k-means clustering',pch=16)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot.events(x,events$start,events$end,myclkm)
cln6=list()
cm6=matrix(NA,k0,dim(casemeasures)[2])
for (i in 1:k0){
cln6[[i]]=which(myclkm==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
set.seed(1234)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
casemeasures=foreach (i=1:length(a),.combine=rbind) %dopar% {
event=x[a[i]:b[i]]
measures(event)
}
tranmeasures=matrix(0,length(a),dim(casemeasures)[2])
for (i in 1:dim(casemeasures)[2]){
x=casemeasures[,i]
if (min(x,na.rm=TRUE)<=0){
x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)
}else{
x=x}
tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}
k0=4
pc.cr <- princomp(scale(tranmeasures))
ratio_kmeans=rep(NA,100)
for (i in 1:100){
assign(paste('cc',i,sep=''),kmeans(pc.cr$scores[, 1:5],k0,iter.max=1000))
ratio_kmeans[i]=get(paste('cc',i,sep=''))$tot.withinss/get(paste('cc',i,sep=''))$totss}
index=which.min(ratio_kmeans)
cc=get(paste('cc',index,sep=''))
myclkm=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=myclkm+1,main='PCA plots for k-means clustering',pch=16)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot.events(x,events$start,events$end,myclkm)
cln6=list()
cm6=matrix(NA,k0,dim(casemeasures)[2])
for (i in 1:k0){
cln6[[i]]=which(myclkm==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
set.seed(12)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
casemeasures=foreach (i=1:length(a),.combine=rbind) %dopar% {
event=x[a[i]:b[i]]
measures(event)
}
tranmeasures=matrix(0,length(a),dim(casemeasures)[2])
for (i in 1:dim(casemeasures)[2]){
x=casemeasures[,i]
if (min(x,na.rm=TRUE)<=0){
x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)
}else{
x=x}
tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}
k0=4
pc.cr <- princomp(scale(tranmeasures))
ratio_kmeans=rep(NA,100)
for (i in 1:100){
assign(paste('cc',i,sep=''),kmeans(pc.cr$scores[, 1:5],k0,iter.max=1000))
ratio_kmeans[i]=get(paste('cc',i,sep=''))$tot.withinss/get(paste('cc',i,sep=''))$totss}
index=which.min(ratio_kmeans)
cc=get(paste('cc',index,sep=''))
myclkm=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=myclkm+1,main='PCA plots for k-means clustering',pch=16)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot.events(x,events$start,events$end,myclkm)
cln6=list()
cm6=matrix(NA,k0,dim(casemeasures)[2])
for (i in 1:k0){
cln6[[i]]=which(myclkm==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
set.seed(12345)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
casemeasures=foreach (i=1:length(a),.combine=rbind) %dopar% {
event=x[a[i]:b[i]]
measures(event)
}
tranmeasures=matrix(0,length(a),dim(casemeasures)[2])
for (i in 1:dim(casemeasures)[2]){
x=casemeasures[,i]
if (min(x,na.rm=TRUE)<=0){
x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)
}else{
x=x}
tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}
k0=4
pc.cr <- princomp(scale(tranmeasures))
ratio_kmeans=rep(NA,100)
for (i in 1:100){
assign(paste('cc',i,sep=''),kmeans(pc.cr$scores[, 1:5],k0,iter.max=1000))
ratio_kmeans[i]=get(paste('cc',i,sep=''))$tot.withinss/get(paste('cc',i,sep=''))$totss}
index=which.min(ratio_kmeans)
cc=get(paste('cc',index,sep=''))
myclkm=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=myclkm+1,main='PCA plots for k-means clustering',pch=16)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot.events(x,events$start,events$end,myclkm)
cln6=list()
cm6=matrix(NA,k0,dim(casemeasures)[2])
for (i in 1:k0){
cln6[[i]]=which(myclkm==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
set.seed(123456)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
casemeasures=foreach (i=1:length(a),.combine=rbind) %dopar% {
event=x[a[i]:b[i]]
measures(event)
}
tranmeasures=matrix(0,length(a),dim(casemeasures)[2])
for (i in 1:dim(casemeasures)[2]){
x=casemeasures[,i]
if (min(x,na.rm=TRUE)<=0){
x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)
}else{
x=x}
tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}
k0=4
pc.cr <- princomp(scale(tranmeasures))
ratio_kmeans=rep(NA,100)
for (i in 1:100){
assign(paste('cc',i,sep=''),kmeans(pc.cr$scores[, 1:5],k0,iter.max=1000))
ratio_kmeans[i]=get(paste('cc',i,sep=''))$tot.withinss/get(paste('cc',i,sep=''))$totss}
index=which.min(ratio_kmeans)
cc=get(paste('cc',index,sep=''))
myclkm=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=myclkm+1,main='PCA plots for k-means clustering',pch=16)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot.events(x,events$start,events$end,myclkm)
cln6=list()
cm6=matrix(NA,k0,dim(casemeasures)[2])
for (i in 1:k0){
cln6[[i]]=which(myclkm==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
eventCluster(x,a,b)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
eventCluster(x,a,b)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
eventCluster(x,a,b,4)
getwd()
file.sources = list.files(pattern="*.R")
sapply(file.sources,source)
kmeans
?kmeans
33*12+70+85
33*12+70+85
33*6+70+85
33*6+70+85
33*6+85
33*6+85
set.seed(12345)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cluster
plot.events(x,events$start,events$end,myclkm)
a
b
plot.events(x,events$start,events$end,myclkm)
plot.events(x,a,b,myclkm)
myclkm
cc
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
set.seed(12345)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
source('~/Desktop/EventDetection/R/measures.R', echo=TRUE)
source('~/Desktop/EventDetection/R/detrendc.R', echo=TRUE)
source('~/Desktop/EventDetection/R/ts2mat.R', echo=TRUE)
set.seed(45)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
set.seed(145)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
source('~/Desktop/EventDetection/R/plot.events.R', echo=TRUE)
source('~/Desktop/EventDetection/R/eventCluster.R', echo=TRUE)
set.seed(4)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
set.seed(5)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
set.seed(6)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
set.seed(7)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
source('~/Desktop/EventDetection/R/plot.events.R', echo=TRUE)
15
31
128-15
source('~/Desktop/EventDetection/R/cbfs.R', echo=TRUE)
set.seed(7)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
i
a
b
a = ceiling(runif(1) * 16) + 16
b = ceiling(runif(1) * 112) + 16
a
b
source('~/Desktop/EventDetection/R/cbfs.R', echo=TRUE)
set.seed(7)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
set.seed(4)
n=128
types=c('box','rc','cr','sine')
shapes=matrix(NA,20,n)
for (i in 1:20){
shapes[i,]=cbfs(type=types[sample(1:4,1)])
}
whitenoise=ts2mat(rnorm(128*20),128)
x=c(rnorm(128),t(cbind(shapes,whitenoise)))
plot(x,ty='l')
w=128
alpha=0.05
events=eventDetection(x,w,alpha,'art')
a=events$start
b=events$end
cc=eventCluster(x,a,b,4)
myclkm=cc$cl
plot.events(x,events$start,events$end,myclkm)
source('~/Desktop/EventDetection/R/cbf_red.R', echo=TRUE)
measures(cbfs('box'))
cbfs
measures(cbfs('box'))
measures(cbfs('sine'))
source('~/Desktop/EventDetection/R/measures.R', echo=TRUE)
source('~/Desktop/EventDetection/R/cbfs.R', echo=TRUE)
