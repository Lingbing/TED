{
    "contents" : "#' Perform noise tests for a time series \n#' \n#' This function performs noise tests on the sliding subsequences extracted from a  time series.\n#' \n#' @param x a time series\n#' @param w a scalar specifying the size of the sliding window\n#' @param noiseType background noise assumed for x. There are two options: white noise or red noise\n#' @keywords time series, noise tests\n#' @export\n#' @examples\n#' set.seed(12345)\n#' n=128\n#' types=c('box','rc','cr','sine')\n#' shapes=matrix(NA,20,n)\n#' for (i in 1:20){\n#'   shapes[i,]=cbfs(type=types[sample(1:4,1)])\n#' }\n#' whitenoise=ts2mat(rnorm(128*20),128)\n#' x=c(t(cbind(shapes,whitenoise)))\n#' plot(x,ty='l')\n#' w=128\n#' tests=noiseTests(x,w,'white')\nnoiseTests <- function(x, w, noiseType = c(\"white\", \"red\")) {\n    registerDoMC(cores = 8)\n    noiseType <- match.arg(noiseType)\n    x = as.numeric(x)\n    lx = length(x)\n    N = length(x) - w + 1\n    l = round(log(w))\n    \n    if (noiseType == \"white\") {\n        testsPvalues = foreach(i = 1:N, .combine = c) %dopar% {\n            xx = x[i:(i + w - 1)]\n            Box.test(xx, type = \"Ljung-Box\", lag = l)$p.value\n        }\n        \n    } else if (noiseType == \"red\") {\n        testsPvalues = foreach(i = 1:N, .combine = c) %dopar% {\n            xx = x[i:(i + w - 1)]\n            if (sum(is.na(xx)) > w/4) {\n                NA\n            } else {\n                xx = na.approx(xx)\n                if (PP.test(xx)$p.value > 0.05) {\n                  za_test = ur.za.fast(xx, \"both\")\n                  ifelse(za_test$teststat < za_test$cval[2], 0, 1)\n                } else {\n                  xx = detrendc(xx)\n                  model = ar(xx, order.max = 1, method = \"ols\")\n                  Box.test(model$resid, lag = l, type = \"Ljung-Box\", fitdf = 1)$p.value\n                }\n            }\n        }\n    } else {\n        stop(\"Not a correct noise type is selected ('white' or 'red') \")\n    }\n    \n    return(testsPvalues)\n    \n} \n",
    "created" : 1395563990955.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3380486193",
    "id" : "A023D889",
    "lastKnownWriteTime" : 1395537953,
    "path" : "~/Desktop/EventDetection/R/noiseTests.R",
    "project_path" : "R/noiseTests.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}