{
    "contents" : "#' Generate an artificial event with white noise\n#' \n#' This function generates a box, cliff-ramp, ramp-cliff or a sine function with white noise as the background noise. Length\n#' of the generated event is 128.\n#' \n#' @param type type of the event to be generated. There are four options: 'box', 'rc','cr','sine' representing \n#' a box, cliff-ramp, ramp-cliff or a sine function.\n#' @param A amplitude of the event\n#' @param sigma a scalar specifying the level of white noise. Default is 1, which means the standard deviation of noise is 1.\n#' @export\n#' @examples\n#' x1 = cbfs(type = 'box', sigma = 1)\n#' x2 = cbfs(type = 'box', sigma = 3)\n#' par(mfrow=c(1,2))\n#' plot(x1,type='l',xlab='t',ylab=expression(x[1]))\n#' plot(x2,type='l',xlab='t',ylab=expression(x[2]))\n\ncbfs <- function(type = c(\"box\", \"rc\", \"cr\", \"sine\"), A = 10, sigma = 1) {\n    t = 0:127\n    # simulate backgroud white noise\n    noise = rnorm(128) * sigma\n    type <- match.arg(type)\n    if (type == \"box\") {\n        # simulate an event\n        y = rep(0, length(t))\n        a = ceiling(runif(1) * 16) + 16\n        b = ceiling(runif(1) * 16) + 112\n        y[a:b] = rep(A, b - a + 1)\n        # add noise to the event\n        finalevent = noise + y\n    }\n    if (type == \"rc\") {\n        # simulate an event\n        y = rep(0, length(t))\n        a = ceiling(runif(1) * 16) + 16\n        b = ceiling(runif(1) * 16) + 112\n        y[a:b] = A * (t[a:b] - a)/(b - a)\n        # add noise to the event\n        finalevent = noise + y\n    }\n    if (type == \"cr\") {\n        # simulate an event\n        y = rep(0, length(t))\n        a = ceiling(runif(1) * 16) + 16\n        b = ceiling(runif(1) * 16) + 112\n        y[a:b] = A * (b - t[a:b])/(b - a)\n        # add noise to the event\n        finalevent = noise + y\n    }\n    if (type == \"sine\") {\n        # simulate an event\n        y = A/2 * sin(t/127 * 2 * pi - pi/2) + A/2\n        # add noise to the event\n        finalevent = noise + y\n    }\n    return(finalevent)\n} \n",
    "created" : 1395562397278.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3136608385",
    "id" : "9DA92DD3",
    "lastKnownWriteTime" : 1395562591,
    "path" : "~/Desktop/EventDetection/R/cbfs.R",
    "project_path" : "R/cbfs.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}