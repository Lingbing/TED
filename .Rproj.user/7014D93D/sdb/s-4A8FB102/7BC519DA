{
    "contents" : "Shapes in Floss 6-s averaged data\n========================================================\n\n```{r preload, echo=FALSE,message=FALSE,comment=FALSE,tidy=TRUE,results='hide',cache=TRUE}\nsetwd('~/Documents/Meetings_2012/Rfunctions')\nfile.sources = list.files(pattern=\"*.R\")\nsapply(file.sources,source)\nfloss_6s=readMat('~/Documents/TurbulenceData//FLOSS/floss_6s/Danijel.mat')\nFlux=readMat('~/Documents/TurbulenceData//Flux/wT_tilt.mat')\nFluxww=readMat('~/Documents/TurbulenceData//Flux/ww_tilt.mat')\nFluxwu=readMat('~/Documents/TurbulenceData//Flux/wu_tilt.mat')\nFluxwv=readMat('~/Documents/TurbulenceData//Flux/wv_tilt.mat')\n# U=readMat('~/Documents/TurbulenceData//Flux/u_tilt.mat')\n# V=readMat('~/Documents/TurbulenceData//Flux/v_tilt.mat')\nfluxTT=readMat('~/Documents/TurbulenceData//Flux/TT.mat')\nW=readMat('~/Documents/TurbulenceData//Flux/w_tilt.mat')\nfor (levels in 1:7){\n  assign(paste('T',levels,sep=''),floss_6s$T[,levels]+273)\n  assign(paste('u',levels,sep=''),floss_6s$U[,levels])\n  assign(paste('v',levels,sep=''),floss_6s$V[,levels])\n  assign(paste('w',levels,sep=''),W$w.tilt[,levels])\n  assign(paste('TT',levels,sep=''),fluxTT$TT[,levels])\n  assign(paste('W',levels,sep=''),sqrt(floss_6s$U[,levels]^2+floss_6s$V[,levels]^2))\n  assign(paste('flux',levels,sep=''),Flux$wT.tilt[,levels])\n  assign(paste('fluxww',levels,sep=''),Fluxww$ww.tilt[,levels])\n  assign(paste('fluxwu',levels,sep=''),Fluxwu$wu.tilt[,levels])\n  assign(paste('fluxwv',levels,sep=''),Fluxwv$wv.tilt[,levels])\n}\n```\n\n``` {r pca, fig.width=7,fig.height=7,echo=FALSE,message=FALSE,results='asis',dev='pdf',comment=FALSE,tidy=TRUE,warning=FALSE,cache=TRUE}\nlibrary(R.matlab)\nlibrary(doMC)\nlibrary(foreach)\nregisterDoMC(cores=8)\nlibrary(zoo)\nlibrary(urca)\nlibrary(Rcpp)\nlibrary(RcppArmadillo)\nlibrary(xtable)\n\nfloss_6sT=floss_6s$T[,2]\nw=120\nfloss_6sT_mat<-ts2mat2(floss_6sT,5400)\n\nload('~/Documents/Meetings_2014/20140105/floss_6sT_tests_detrend_level2.Rdata')\nfloss_6sT_sh=lapply(1:dim(floss_6sT_tests)[2],function(i){shape_extraction1206(floss_6sT_mat[i,],floss_6sT_tests[,i],w)})\n\nfloss_6sT_a=c()\nfloss_6sT_b=c()\nfor (i in 1:dim(floss_6sT_mat)[1]){\n  floss_6sT_a=c(floss_6sT_a,floss_6sT_sh[[i]]$start+w/4+(i-1)*5400)\n  floss_6sT_b=c(floss_6sT_b,floss_6sT_sh[[i]]$end+w-1-w/4+(i-1)*5400)}\n\ncasemeasures=foreach (i=1:length(floss_6sT_a),.combine=rbind) %dopar% {\n  x=floss_6sT[(floss_6sT_a[i]):(floss_6sT_b[i])]\n   if(summary(lm(x~c(1:length(x))))$adj.r.squared>0.85){\n         x=detrend(x)\n       }\n  measures_financial(x,floss_6sT_a[i],floss_6sT_b[i])\n}\n\ncasemeasures=casemeasures[,-6]\nlibrary(geoR)\n\ntranmeasures=matrix(0,length(floss_6sT_a),dim(casemeasures)[2])\n\nfor (i in 1:dim(casemeasures)[2]){\n  x=casemeasures[,i]\n  if (min(x,na.rm=TRUE)<=0){\n    x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)\n  }else{\n    x=x}\n  tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}\nk0=3\npc.cr <- princomp(scale(tranmeasures))\nratio_kmeans=rep(NA,100)\n# for (i in 1:100){\n# assign(paste('cc',i,sep=''),kmeans(pc.cr$scores[, 1:5],k0,iter.max=1000))\n# ratio_kmeans[i]=get(paste('cc',i,sep=''))$tot.withinss/get(paste('cc',i,sep=''))$totss}\n# index=which.min(ratio_kmeans)\n# cc=get(paste('cc',index,sep=''))\nload('~/Documents/Meetings_2014/20140121/cc.Rdata')\nmyclkm=cc$cluster\npca.dim1 <- pc.cr$scores[,1]\npca.dim2 <- pc.cr$scores[,2]\n# plot(pca.dim1,pca.dim2,col=myclkm+1,main='PCA plots for k-means')\n\ncln6=list()\ncm6=matrix(NA,k0,dim(casemeasures)[2])\nfor (i in 1:k0){\n  cln6[[i]]=which(myclkm==i)\n  if (!is.array(casemeasures[cln6[[i]],])){\n    cm6[i,]=(casemeasures[cln6[[i]],])\n  }else{ \n    cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}\ncolnames(cm6)=colnames(casemeasures)\n```\n\n``` {r pca_plot, fig.width=7,fig.height=7,echo=FALSE,message=FALSE,results='asis',dev='pdf',comment=FALSE,tidy=TRUE,warning=FALSE,cache=TRUE}\nplot(pca.dim1,pca.dim2,col=myclkm+1,main='PCA plots for k-means clustering',pch=16)\ncln6=list()\ncm3=matrix(NA,k0,dim(pc.cr$scores[,1:5])[2])\nfor (i in 1:k0){\n  cln6[[i]]=which(myclkm==i)\n  if (!is.array(pc.cr$scores[,1:5][cln6[[i]],])){\n    cm3[i,]=(pc.cr$scores[,1:5][cln6[[i]],])\n  }else{ \n    cm3[i,]=colMeans(pc.cr$scores[,1:5][cln6[[i]],])}}\ndist=list()\n# for (i in 1:k0){\n#   dist_i=rep(NA,length(cln6[[i]]))\n#   for (j in 1:length(cln6[[i]])){\n#     dist_i[j]=dist(rbind(cm6[i,],casemeasures[cln6[[i]][j],]))\n#     dist[[i]]=dist_i\n#   }\n# }\nfor (i in 1:k0){\n  dist_i=rep(NA,length(cln6[[i]]))\n  for (j in 1:length(cln6[[i]])){\n    dist_i[j]=dist(rbind(cm3[i,],pc.cr$scores[cln6[[i]][j],1:5]))\n    dist[[i]]=dist_i\n  }\n}\n\nshapesmat=foreach(i=1:k0,.combine=rbind)%dopar%{\n  \n  ind=sort(dist[[i]],index.return=TRUE,na.last=NA,decreasing=FALSE)$ix[1:3]\n  cln6[[i]][ind]\n  }\nfor (i in 1:k0){\n  points(pca.dim1[shapesmat[i,]],pca.dim2[shapesmat[i,]],col=1,pch=16,cex=1.5)\n}\n\nshapesmat2=foreach(i=1:k0,.combine=rbind)%dopar%{\n  \n  ind=sort(dist[[i]],index.return=TRUE,na.last=NA,decreasing=TRUE)$ix[1:3]\n  cln6[[i]][ind]}\nfor (i in 1:k0){\n  points(pca.dim1[shapesmat2[i,]],pca.dim2[shapesmat2[i,]],col=1,pch=17,cex=1.5)\n}\nlegend(-4, -5.5, c('closest','furtherest'), col = 1,pch = c(16,17))\n```\n\n## Closest and furthest 3 instances\n```{r prototypes, echo=FALSE,cache=FALSE,fig.width=12,fig.height=18,dev='pdf'}\nregisterDoMC(cores=8)\npar(mar=c(7,7,4,4)+.1)\npar(mgp=c(5,1.8,0))\npar(mfrow=c(6,k0))\n\nfor (j in 1:3){\nfor (i in 1:k0){\nind=shapesmat[i,j]\nx=T2[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\nif(summary(lm(x~c(1:length(x))))$adj.r.squared>0.85){\n         x=detrend(x)\n       }\nplot(c(1:length(x))*6,x,ty='l',xlab='Time (s)',ylab='T (K)',col=i+1,cex.lab=3,cex.axis=3,lwd=3)}}\n\nfor (j in 1:3){\nfor (i in 1:k0){\nind=shapesmat2[i,j]\nx=T2[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\nif(summary(lm(x~c(1:length(x))))$adj.r.squared>0.85){\n         x=detrend(x)\n       }\nplot(c(1:length(x))*6,x,ty='l',xlab='Time (s)',ylab='T (K)',col=i+1,cex.lab=3,cex.axis=3,lwd=3)}}\n```\n\nAnalysis of several physical features\n========================================================\n\n\n### Boxplots for several physical features (level 2) for each cluster (paper).\n``` {r boxplots, fig.width=9,fig.height=12,echo=FALSE,message=FALSE,cache=TRUE,dev='pdf'}\nregisterDoMC(cores=8)\n\n#par(mgp=c(4.7,1.5,0))\npar(mar=c(5,6.5,4,4)+.1)\npar(mfrow=c(3,2))\n\nmaxds_wsp=foreach (i = 1:k0)%dopar%{\n  inds=which(myclkm==i)\n  maxd=c()\n  for (j in 1:length(inds)){\n    ind=inds[j]\n    maxdir=mean(get(paste('W',2,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])])\n    \n    maxd=c(maxd,maxdir)}\nmaxd\n}\n\nboxplot(maxds_wsp,col=c(1:3)+1,xlab='Shape clusters',ylab=expression('U'~(m~s^{-1})),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n\nRi_s=foreach (k = 1:k0)%dopar%{\n  ind=which(myclkm==k)\n  sapply(ind,function(i){Ri_floss(floss_6sT_a[i],floss_6sT_b[i])})\n\n}\n\nboxplot(Ri_s,col=c(1:3)+1,xlab='Shape clusters',ylab='Ri',ylim=c(0,3.2),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n\n        \nmaxds=foreach (i = 1:k0)%dopar%{\n  inds=which(myclkm==i)\n  maxd=c()\n  for (j in 1:length(inds)){\n    ind=inds[j]  \n    u=get(paste('u',2,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n    v=get(paste('v',2,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n    if (sum(is.na(u))==length(u) | sum(is.na(v))==length(v)){\n      maxdir=NA\n    }else{\n    dir=90-(atan2(-v,-u))*180/pi\n    indn=which(dir<0)\n    dir[indn]=dir[indn]+360\n    dis=dist(dir, diag = FALSE)\n    maxdir=dis[which.min(abs(dis-180))]\n    if (maxdir>180){\n      maxdir=360-maxdir\n    }}\n    maxd=c(maxd,maxdir)}\n  maxd}\n\nboxplot(maxds,col=c(1:3)+1,xlab='Shape clusters',ylab=expression(Delta~'dir'[max]~' ('~degree~')'),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n\n\nmaxds=foreach (i = 1:k0)%dopar%{\n  inds=which(myclkm==i)\n  maxd=c()\n  for (j in 1:length(inds)){\n    ind=inds[j]\n    if (sum(is.na(get(paste('T',2,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('T',2,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('T',2,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('T',2,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n    \n    maxd=c(maxd,intsty)}\n  maxd\n}\n\nboxplot(maxds,col=c(1:3)+1,xlab='Shape clusters',ylab=expression(Delta~'T'[max]~' (K)'),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n\n\nfluxww6s=foreach (k = 1:k0)%dopar%{\n  ind=which(myclkm==k)\n  sapply(ind,function(ind){mean(fluxww2[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)})\n}\n\nboxplot(fluxww6s,col=c(1:3)+1,xlab='Shape clusters',ylab=expression((bar(w^{\"'\"}~w^{\"'\"}))['6s']~(m^2~s^{-2})),ylim=c(0,0.2),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n\nfluxwT6s=foreach (k = 1:k0)%dopar%{\n  ind=which(myclkm==k)\n  sapply(ind,function(ind){mean(flux2[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)})\n}\n\nboxplot(fluxwT6s,col=c(1:3)+1,xlab='Shape clusters',ylab=expression((bar(w^{\"'\"}~T^{\"'\"}))['6s']~(K~m~s^{-1})),ylim=c(-0.055,0.005),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n\n\n```\n\n### Data for the table\n``` {r tab_data, results='asis',echo=FALSE,message=FALSE,cache=TRUE,dev='pdf'}\n\ntab_dat=cbind(1/cm6[,2],cm6[,c(1,3:10)])\ncolnames(tab_dat)[1]=c('smoothness')\nprint(xtable(t(tab_dat),digits=3),type=\"html\")\n\n```\n\n\n\n\n### Profiles for deep and shallow events\n\n\n``` {r depths, fig.width=24.1,fig.height=22,echo=FALSE,message=FALSE,cache=TRUE}\nlevels=c(2,5,10,15,20,30)\nlibrary(fields)\ndepths=c()\ndepthmean=rep(NA,k0)\ncors=matrix(0,k0,5)\nlags=matrix(0,k0,5)\ndepths=foreach (j = 1:k0)%dopar%{\n  cor=matrix(1,length(which(myclkm==j)),5)\n  depth=rep(NA,length(which(myclkm==j)))\n  lag=matrix(1,length(which(myclkm==j)),5)\n  for (k in 1:length(which(myclkm==j))){\n    ind=which(myclkm==j)[k]\n    for (m in 1:5){\n      assign(paste('cor[',k,m,']',sep=''),as.numeric(Find_Max_CCF(get(paste(\"T\",2,sep=\"\"))[floss_6sT_a[ind]:floss_6sT_b[ind]],get(paste(\"T\",m+2,sep=\"\"))[floss_6sT_a[ind]:floss_6sT_b[ind]])[1]))\n      assign(paste('lag[',k,m,']',sep=''),as.numeric(Find_Max_CCF(get(paste(\"T\",2,sep=\"\"))[floss_6sT_a[ind]:floss_6sT_b[ind]],get(paste(\"T\",m+2,sep=\"\"))[floss_6sT_a[ind]:floss_6sT_b[ind]])[2]))\n      cor[k,m]=get(paste('cor[',k,m,']',sep=''))\n      lag[k,m]=get(paste('lag[',k,m,']',sep=''))\n      cors[j,]=colMeans(cor,na.rm=TRUE)\n      lags[j,]=colMeans(lag,na.rm=TRUE)}\n    signs=rep(NA,5)\n    \n    for (s in 1:4){\n      signs[s]=(cor[k,s] - 1/exp(1))*(cor[k,s+1] - 1/exp(1))}\n    \n    if (sum(na.exclude(cor[k,])>1/exp(1))==5){\n      inde=5}else{\n        inde=which(signs<0)[1]}\n    depth[k]=ifelse(is.na(inde),NA,levels[inde+1]-levels[1] )\n    if (is.na(depth[k])){\n      depth[k]=0\n    }\n    \n  }\n  \n  depthmean[j]=median(depth,na.rm=TRUE)\n  depth}\n```\n\n\n\n### Shallow events have more negative shear values\n\n``` {r deep_and_shallow_shear, fig.width=7,fig.height=7,echo=FALSE,message=FALSE,cache=TRUE,dev='pdf'}\nz=c(1,2,5,10,15,20,30)\npar(mar=c(5,5,4,4)+.1)\nfor (k in 1:k0){\n  inds=which(myclkm==k)\n  event_deep=inds[which(depths[[k]]==28)]\n  event_shallow=inds[which(depths[[k]]<28)]\n  \n  deep_and_shallow=list(event_deep=inds[which(depths[[k]]==28)],inds[event_shallow=which(depths[[k]]<28)])\n  for (i in 1:2){\n    W_profile=matrix(NA,length(deep_and_shallow[[i]]),7)\n    for (j in 1:length(deep_and_shallow[[i]])){\n      ind=deep_and_shallow[[i]][j] \n      for (levels in 1:7){ \n        W_profile[j,levels]=mean(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}}\n\n   \n    shear_profile=matrix(NA,length(deep_and_shallow[[i]]),6)\n    for (heights in 1:6){\n      shear_profile[,heights]=(W_profile[,heights+1]-W_profile[,heights])/(z[heights+1]-z[heights])\n    }\n    pp=round(sapply(c(1:6),function(i){sum(na.exclude(shear_profile[,i])<0)/length(na.exclude(shear_profile[,i]))}),2)\n    if (k==1 & i==1){\n    plot(pp*100,c(1:6),col=k+1,ty='l',yaxt='n',xlim=c(0,35),ylab='Height (m)',xlab='Percentage of negative dU/dz values (%)',cex.lab=1.5,cex.axis=1.5,lwd=2)\n    axis(2, labels=z[2:7],at=c(1:6),cex.axis=1.5)}\n    else{\n    lines(pp*100,c(1:6),col=k+1,lty=i,yaxt='n',lwd=2)\n    legend('bottomright',legend=c('Cluster 1','Cluster 2','Cluster 3'),col=c(2:4),lty=1,cex=1.3,lwd=2)}\n    \n\n  }}\n```\n\n### Data for the table (deep and shallow data)\n\n``` {r deep_and_shallow_tab, fig.width=28,fig.height=22,echo=FALSE,message=FALSE,cache=TRUE}\nprint(c('Wsp','Ri','max dir change','fluxwT_6s','fluxww_6s','Tintensity','wintensity','Wintensity'))\nfor (k in 1:k0){\ninds=which(myclkm==k)\nevent_deep=inds[which(depths[[k]]==28)]\nevent_shallow=inds[which(depths[[k]]<28)]\n\ndeep_and_shallow=list(event_deep=inds[which(depths[[k]]==28)],inds[event_shallow=which(depths[[k]]<28)])\nfor (i in 1:2){\n  intensity=wintensity_profile=Wintensity_profile=T_profile=W_profile=flux_profile_6s=fluxww_profile_6s=dir_profile=matrix(NA,length(deep_and_shallow[[i]]),7)\n  Ri_profile=rep(NA,length(deep_and_shallow[[i]]))\n  for (j in 1:length(deep_and_shallow[[i]])){\n    ind=deep_and_shallow[[i]][j] \n    Ri_profile[j]=Ri_floss(floss_6sT_a[ind],floss_6sT_b[ind])\n\n\n    for (levels in 1:7){\n      T_profile[j,levels]=mean(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      if (sum(is.na(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n      intensity[j,levels]=intsty\n      \n      if (sum(is.na(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n    wintensity_profile[j,levels]=intsty\n    \n    if (sum(is.na(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n    Wintensity_profile[j,levels]=intsty\n    \n      W_profile[j,levels]=mean(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      flux_profile_6s[j,levels]=mean(get(paste('flux',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      fluxww_profile_6s[j,levels]=mean(get(paste('fluxww',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      u=get(paste('u',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n      v=get(paste('v',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n      if (sum(is.na(u))==length(u) | sum(is.na(v))==length(v)){\n        maxdir=NA\n      }else{\n        dir=90-(atan2(-v,-u))*180/pi\n        indn=which(dir<0)\n        dir[indn]=dir[indn]+360\n        dis=dist(dir, diag = FALSE)\n        maxdir=dis[which.min(abs(dis-180))]\n        if (maxdir>180){\n          maxdir=360-maxdir\n        }}\n      dir_profile[j,levels]=maxdir\n\n\n    }\n  }\n  \n  \n  print(round(c(median(W_profile[,2],na.rm=TRUE),median(Ri_profile,na.rm=TRUE),median(dir_profile[,2],na.rm=TRUE),median(flux_profile_6s[,2],na.rm=TRUE),median(fluxww_profile_6s[,2],na.rm=TRUE),median(intensity[,2],na.rm=TRUE),median(wintensity_profile[,2],na.rm=TRUE),median(Wintensity_profile[,2],na.rm=TRUE)),3))\n  \n  }}\n  \n```\n\n\n### Boxplots for vertical profiles for each cluster (for paper)\n\n``` {r boxplots_profiles_1, fig.width=16,fig.height=23,echo=FALSE,message=FALSE,cache=TRUE,dev='pdf'}\npar(mar=c(5.9,6.7,4,4)+.1)\npar(mgp=c(4.7,1.5,0))\npar(mfcol=c(5,3))\nz=c(1,2,5,10,15,20,30)\nfor (k in 1:k0){\n  W_profile=Wdir_profile=dir_change=intensity_profile=wintensity_profile=matrix(NA,length(which(myclkm==k)),7)\n  for (j in 1:length(which(myclkm==k))){\n    ind=which(myclkm==k)[j] \n    for (levels in 1:7){\n      \n      W_profile[j,levels]=mean(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      u0=get(paste('u',1,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n      v0=get(paste('v',1,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n       if (sum(is.na(u0))==length(u0) | sum(is.na(v0))==length(v0)){\n      mean_windir0=NA\n    }else{\n    mean_windir0=90-180*(atan2(-mean(v0,na.rm=TRUE),-mean(u0,na.rm=TRUE)))/pi\n#     if(mean_windir0<0)\n#       mean_windir0=mean_windir0+360\n}\n    \n    \n      u=get(paste('u',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n      v=get(paste('v',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n    if (sum(is.na(u))==length(u) | sum(is.na(v))==length(v)){\n      maxdir=NA\n    }else{\n    mean_windir=90-180*(atan2(-mean(v,na.rm=TRUE),-mean(u,na.rm=TRUE)))/pi\n#     if(mean_windir<0)\n#       mean_windir=mean_windir+360\n}\n# \n#       Wdir_profile[j,levels]=ifelse(dist(c(mean_windir,mean_windir0))>180,360-dist(c(mean_windir,mean_windir0)),dist(c(mean_windir,mean_windir0)))\nWdir_profile[j,levels]=ifelse(mean_windir-mean_windir0>180,mean_windir-mean_windir0-360,mean_windir-mean_windir0)\nWdir_profile[j,levels]=ifelse(mean_windir-mean_windir0<(-180),mean_windir-mean_windir0+360,mean_windir-mean_windir0)  \n    if (sum(is.na(u))==length(u) | sum(is.na(v))==length(v)){\n      maxdir=NA\n    }else{\n      dir=90-(atan2(-v,-u))*180/pi\n      indn=which(dir<0)\n      dir[indn]=dir[indn]+360\n      dis=dist(dir, diag = FALSE)\n      maxdir=dis[which.min(abs(dis-180))]\n      if (maxdir>180){\n        maxdir=360-maxdir\n      }}\n    dir_change[j,levels]=maxdir\n    \n   if (sum(is.na(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n    intensity_profile[j,levels]=intsty\n    \n  \n    \n    \n    if (sum(is.na(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n    wintensity_profile[j,levels]=intsty\n\n\n\n    }\n  }\n  boxplot(W_profile,ylab='Height (m)',xlab=expression('U'~(m~s^{-1})),yaxt='n',col=k+1,horizontal=TRUE,ylim=c(0,14),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n  axis(2, labels=z,at=c(1:7),cex.axis=2.5)\n  shear_profile=matrix(NA,length(which(myclkm==k)),6)\nfor (heights in 1:6){\n  shear_profile[,heights]=(W_profile[,heights+1]-W_profile[,heights])/(z[heights+1]-z[heights])\n}\n\nboxplot(shear_profile,ylab='Height (m)',xlab=expression(paste('dU/dz (',s^{-1},')')),yaxt='n',col=k+1,horizontal=TRUE,ylim=c(-0.1,1.1),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\naxis(2, labels=z[2:7],at=c(1:6),cex.axis=2.5)\n  boxplot(Wdir_profile,ylab='Height (m)',xlab=expression(paste('dir - dir'['1m'],' (',degree,')')),yaxt='n',col=k+1,horizontal=TRUE,outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0,ylim=c(-50,130))\n  axis(2, labels=z,at=c(1:7),cex.axis=2.5)\n#   boxplot(dir_change,ylab='Height (m)',xlab=expression(Delta~'dir'[max]~' ('~degree~')'),yaxt='n',col=k+1,horizontal=TRUE,outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0,ylim=c(0,180))\n#   axis(2, labels=z,at=c(1:7),cex.axis=2.5)\n  boxplot(intensity_profile,ylab='Height (m)',xlab=expression(Delta~'T'[max]~' (K)'),yaxt='n',col=k+1,horizontal=TRUE,outline=FALSE,ylim=c(0,8),cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n  axis(2, labels=z,at=c(1:7),cex.axis=2.5)\n  \n  boxplot(wintensity_profile,ylab='Height (m)',xlab=expression(Delta~'w'[max]~~(m~s^{-1})),yaxt='n',col=k+1,horizontal=TRUE,outline=FALSE,ylim=c(0,3),cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\n  axis(2, labels=z,at=c(1:7),cex.axis=2.5)\n\n}\n\n\n\n```\n### second one\n``` {r boxplots_profiles_2, fig.width=16,fig.height=18.4,echo=FALSE,message=FALSE,cache=TRUE,dev='pdf'}\npar(mar=c(5.9,6.7,4,4)+.1)\npar(mgp=c(5,1.5,0))\n\npar(mfcol=c(4,3))\nz=c(1,2,5,10,15,20,30)\nfor (k in 1:k0){\n  W_profile=flux_profile_6s=flux_profile_shape=fluxww_profile_shape=fluxww_profile_6s=matrix(NA,length(which(myclkm==k)),7)\n  for (j in 1:length(which(myclkm==k))){\n    ind=which(myclkm==k)[j] \n    for (levels in 1:7){\n    W_profile[j,levels]=mean(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n    w=get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n    T=get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n    flux_profile_shape[j,levels]=mean((w-mean(w,na.rm=TRUE))*(T-mean(T,na.rm=TRUE)))\n    flux_profile_6s[j,levels]=mean(get(paste('flux',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n    fluxww_profile_shape[j,levels]=(w-mean(w,na.rm=TRUE))%*%(w-mean(w,na.rm=TRUE))/length(w)\n    fluxww_profile_6s[j,levels]=mean(get(paste('fluxww',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE) }}\n\n\n\nboxplot(fluxww_profile_6s,ylab='Height (m)',xlab=expression((bar(w^{\"'\"}~w^{\"'\"}))['6s']~(m^2~s^{-2})),yaxt='n',horizontal=TRUE,col=k+1,ylim=c(0,0.24),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\naxis(2, labels=z,at=c(1:7),cex.axis=2.5)\n\nboxplot(flux_profile_6s,ylab='Height (m)',xlab=expression((bar(w^{\"'\"}~T^{\"'\"}))['6s']~(K~m~s^{-1})),yaxt='n',col=k+1,horizontal=TRUE,ylim=c(-0.05,0.03),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\naxis(2, labels=z,at=c(1:7),cex.axis=2.5)\n\nboxplot(fluxww_profile_shape,ylab='Height (m)',xlab=expression((bar(w^{\"'\"}~w^{\"'\"}))['event']~(m^2~s^{-2})),yaxt='n',horizontal=TRUE,col=k+1,ylim=c(0,0.24),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\naxis(2, labels=z,at=c(1:7),cex.axis=2.5)\n\n\nboxplot(flux_profile_shape,ylab='Height (m)',xlab=expression((bar(w^{\"'\"}~T^{\"'\"}))['event']~(K~m~s^{-1})),yaxt='n',col=k+1,horizontal=TRUE,ylim=c(-0.05,0.03),outline=FALSE,cex.lab=2.5,cex.axis=2.5,cex.main=2.0)\naxis(2, labels=z,at=c(1:7),cex.axis=2.5)\n\n}\n```\n\n### Boxplots for vertical profiles for each cluster (for paper)\n\n``` {r boxplots_profiles_3, fig.width=14,fig.height=20,echo=FALSE,message=FALSE,cache=TRUE,dev='pdf'}\npar(mar=c(5,6,4,4)+.1)\npar(mgp=c(4,1,0))\npar(mfcol=c(5,3))\nz=c(1,2,5,10,15,20,30)\nfor (k in 1:k0){\n  W_profile=Wdir_profile=dir_change=intensity_profile=wintensity_profile=matrix(NA,length(which(myclkm==k)),7)\n  for (j in 1:length(which(myclkm==k))){\n    ind=which(myclkm==k)[j] \n    for (levels in 1:7){\n      \n      W_profile[j,levels]=mean(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      u0=get(paste('u',1,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n      v0=get(paste('v',1,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n       if (sum(is.na(u0))==length(u0) | sum(is.na(v0))==length(v0)){\n      mean_windir0=NA\n    }else{\n    mean_windir0=90-180*(atan2(-mean(v0,na.rm=TRUE),-mean(u0,na.rm=TRUE)))/pi\n    if(mean_windir0<0)\n      mean_windir0=mean_windir0+360}\n    \n    \n      u=get(paste('u',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n      v=get(paste('v',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n    if (sum(is.na(u))==length(u) | sum(is.na(v))==length(v)){\n      maxdir=NA\n    }else{\n    mean_windir=90-180*(atan2(-mean(v,na.rm=TRUE),-mean(u,na.rm=TRUE)))/pi\n    if(mean_windir<0)\n      mean_windir=mean_windir+360}\n\n      Wdir_profile[j,levels]=ifelse(dist(c(mean_windir,mean_windir0))>180,360-dist(c(mean_windir,mean_windir0)),dist(c(mean_windir,mean_windir0)))\n    \n    if (sum(is.na(u))==length(u) | sum(is.na(v))==length(v)){\n      maxdir=NA\n    }else{\n      dir=90-(atan2(-v,-u))*180/pi\n      indn=which(dir<0)\n      dir[indn]=dir[indn]+360\n      dis=dist(dir, diag = FALSE)\n      maxdir=dis[which.min(abs(dis-180))]\n      if (maxdir>180){\n        maxdir=360-maxdir\n      }}\n    dir_change[j,levels]=maxdir\n    \n   if (sum(is.na(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n    intensity_profile[j,levels]=intsty\n    \n  \n    \n    \n    if (sum(is.na(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n    wintensity_profile[j,levels]=intsty\n\n\n\n    }\n  }\n  deep=which(depths[[k]]==28)\n  shallow=which(depths[[k]]<28)\n  W_profile_new=cbind(rbind(W_profile[shallow,],matrix(NA,length(deep)-length(shallow),7)),W_profile[deep,])\n  boxplot(W_profile_new,ylab='Height (m)',xlab=expression('Mean wsp'~(m~s^{-1})),yaxt='n',col=c(rep(k+4,7),rep(k+1,7)),horizontal=TRUE,ylim=c(0,14),outline=FALSE,cex.lab=2.0,cex.axis=2.0,cex.main=2.0)\n  axis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n  \n  Wdir_profile_new=cbind(rbind(Wdir_profile[shallow,],matrix(NA,length(deep)-length(shallow),7)),Wdir_profile[deep,])\n  boxplot(Wdir_profile_new,ylab='Height (m)',xlab=expression(paste('Wind dir (',degree,')')),yaxt='n',col=c(rep(k+4,7),rep(k+1,7)),horizontal=TRUE,outline=FALSE,cex.lab=2.0,cex.axis=2.0,cex.main=2.0,ylim=c(0,130))\n  axis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n  \n  dir_change_new=cbind(rbind(dir_change[shallow,],matrix(NA,length(deep)-length(shallow),7)),dir_change[deep,])\n  boxplot(dir_change_new,ylab='Height (m)',xlab=expression(paste('Max dir change (',degree,')')),yaxt='n',col=c(rep(k+4,7),rep(k+1,7)),horizontal=TRUE,outline=FALSE,cex.lab=2.0,cex.axis=2.0,cex.main=2.0,ylim=c(0,180))\n  axis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n  intensity_profile_new=cbind(rbind(intensity_profile[shallow,],matrix(NA,length(deep)-length(shallow),7)),intensity_profile[deep,])\n  boxplot(intensity_profile_new,ylab='Height (m)',xlab='T intensity (K)',yaxt='n',col=c(rep(k+4,7),rep(k+1,7)),horizontal=TRUE,outline=FALSE,ylim=c(0,8),cex.lab=2.0,cex.axis=2.0,cex.main=2.0)\n  axis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n  wintensity_profile_new=cbind(rbind(wintensity_profile[shallow,],matrix(NA,length(deep)-length(shallow),7)),wintensity_profile[deep,])\n  boxplot(wintensity_profile_new,ylab='Height (m)',xlab=expression('w intensity'~(m~s^{-1})),yaxt='n',col=c(rep(k+4,7),rep(k+1,7)),horizontal=TRUE,outline=FALSE,ylim=c(0,3),cex.lab=2.0,cex.axis=2.0,cex.main=2.0)\n  axis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n\n}\n\n\n\n```\n### second one\n``` {r boxplots_profiles_4, fig.width=14,fig.height=20,echo=FALSE,message=FALSE,cache=TRUE,dev='pdf'}\npar(mar=c(5,6,4,4)+.1)\npar(mgp=c(4,1,0))\npar(mfcol=c(5,3))\nz=c(1,2,5,10,15,20,30)\nfor (k in 1:k0){\n  deep=which(depths[[k]]==28)\n  shallow=which(depths[[k]]<28)\n  W_profile=flux_profile_6s=flux_profile_shape=fluxww_profile_shape=fluxww_profile_6s=matrix(NA,length(which(myclkm==k)),7)\n  for (j in 1:length(which(myclkm==k))){\n    ind=which(myclkm==k)[j] \n    for (levels in 1:7){\n    W_profile[j,levels]=mean(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n    w=get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n    T=get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n    flux_profile_shape[j,levels]=mean((w-mean(w,na.rm=TRUE))*(T-mean(T,na.rm=TRUE)))\n    flux_profile_6s[j,levels]=mean(get(paste('flux',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n    fluxww_profile_shape[j,levels]=(w-mean(w,na.rm=TRUE))%*%(w-mean(w,na.rm=TRUE))/length(w)\n    fluxww_profile_6s[j,levels]=mean(get(paste('fluxww',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE) }}\n\nshear_profile=matrix(NA,length(which(myclkm==k)),6)\nfor (heights in 1:6){\n  shear_profile[,heights]=(W_profile[,heights+1]-W_profile[,heights])/(z[heights+1]-z[heights])\n}\nshear_profile_new=cbind(rbind(shear_profile[shallow,],matrix(NA,length(deep)-length(shallow),6)),shear_profile[deep,])\nboxplot(shear_profile_new[,c(1,7,2,8,3,9,4,10,5,11,6,12)],ylab='Height (m)',xlab=expression(paste('Shear (',s^{-1},')')),yaxt='n',col=rep(c(k+4,k+1),6),horizontal=TRUE,ylim=c(-0.1,1.1),outline=FALSE,cex.lab=2.0,cex.axis=2.0,cex.main=2.0)\naxis(2, labels=rep(z[2:7],2),at=c(1:12),cex.axis=2.0)\n\nfluxww_profile_6s_new=cbind(rbind(fluxww_profile_6s[shallow,],matrix(NA,length(deep)-length(shallow),7)),fluxww_profile_6s[deep,])\nboxplot(fluxww_profile_6s_new[,c(1,8,2,9,3,10,4,11,5,12,6,13,7,14)],ylab='Height (m)',xlab=expression((bar(w^{\"'\"}~w^{\"'\"}))['6s']~(m^2~s^{-2})),yaxt='n',horizontal=TRUE,col=rep(c(k+4,k+1),7),ylim=c(0,0.24),outline=FALSE,cex.lab=2.0,cex.axis=2.0,cex.main=2.0)\naxis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n\nflux_profile_6s_new=cbind(rbind(flux_profile_6s[shallow,],matrix(NA,length(deep)-length(shallow),7)),flux_profile_6s[deep,])\nboxplot(flux_profile_6s_new[,c(1,8,2,9,3,10,4,11,5,12,6,13,7,14)],ylab='Height (m)',xlab=expression((bar(w^{\"'\"}~T^{\"'\"}))['6s']~(K~m~s^{-1})),yaxt='n',col=rep(c(k+4,k+1),7),horizontal=TRUE,ylim=c(-0.05,0.02),outline=FALSE,cex.lab=2.0,cex.axis=2.0,cex.main=2.0)\naxis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n\nfluxww_profile_shape_new=cbind(rbind(fluxww_profile_shape[shallow,],matrix(NA,length(deep)-length(shallow),7)),fluxww_profile_shape[deep,])\nboxplot(fluxww_profile_shape_new[,c(1,8,2,9,3,10,4,11,5,12,6,13,7,14)],ylab='Height (m)',xlab=expression((bar(w^{\"'\"}~w^{\"'\"}))['event']~(m^2~s^{-2})),yaxt='n',horizontal=TRUE,col=rep(c(k+4,k+1),7),ylim=c(0,0.15),outline=FALSE,cex.lab=2.0,cex.axis=2.0,cex.main=2.0)\naxis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n\nflux_profile_shape_new=cbind(rbind(flux_profile_shape[shallow,],matrix(NA,length(deep)-length(shallow),7)),flux_profile_shape[deep,])\nboxplot(flux_profile_shape_new[,c(1,8,2,9,3,10,4,11,5,12,6,13,7,14)],ylab='Height (m)',xlab=expression((bar(w^{\"'\"}~T^{\"'\"}))['event']~(K~m~s^{-1})),yaxt='n',col=rep(c(k+4,k+1),7),horizontal=TRUE,ylim=c(-0.04,0.03),outline=FALSE,cex.lab=2.0,cex.axis=2.0,cex.main=2.0)\naxis(2, labels=rep(z,2),at=c(1:14),cex.axis=2.0)\n\n}\n```\n\n### Deep and shallow events\n``` {r deep_and_shallow, fig.width=40,fig.height=22,echo=FALSE,message=FALSE,cache=TRUE,dev='pdf'}\npar(mfrow=c(6,10))\nfor (k in 1:k0){\ninds=which(myclkm==k)\nevent_deep=inds[which(depths[[k]]==28)]\nevent_shallow=inds[which(depths[[k]]<28)]\n\ndeep_and_shallow=list(event_deep=inds[which(depths[[k]]==28)],inds[event_shallow=which(depths[[k]]<28)])\nfor (i in 1:2){\n  intensity=Wintensity=wintensity=T_profile=W_profile=flux_profile_6s=fluxww_profile_6s=dir_profile=matrix(NA,length(deep_and_shallow[[i]]),7)\n  for (j in 1:length(deep_and_shallow[[i]])){\n    ind=deep_and_shallow[[i]][j] \n    for (levels in 1:7){\n      T_profile[j,levels]=mean(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      if (sum(is.na(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('T',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n      intensity[j,levels]=intsty\n      \n      if (sum(is.na(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n      Wintensity[j,levels]=intsty\n      \n      if (sum(is.na(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))==length(is.na(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]))){\n        intsty=NA\n      }else{\n      intsty=max(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)-min(get(paste('w',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)}\n      wintensity[j,levels]=intsty\n      \n      W_profile[j,levels]=mean(get(paste('W',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      flux_profile_6s[j,levels]=mean(get(paste('flux',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n      fluxww_profile_6s[j,levels]=mean(get(paste('fluxww',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])],na.rm=TRUE)\n\n\n      u=get(paste('u',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n      v=get(paste('v',levels,sep=''))[(floss_6sT_a[ind]):(floss_6sT_b[ind])]\n      if (sum(is.na(u))==length(u) | sum(is.na(v))==length(v)){\n        maxdir=NA\n      }else{\n        dir=90-(atan2(-v,-u))*180/pi\n        indn=which(dir<0)\n        dir[indn]=dir[indn]+360\n        dis=dist(dir, diag = FALSE)\n        maxdir=dis[which.min(abs(dis-180))]\n        if (maxdir>180){\n          maxdir=360-maxdir\n        }}\n      dir_profile[j,levels]=maxdir\n    }\n  }\n  \n  boxplot(T_profile,ylab='Height (m)',xlab=expression(T~(K)),yaxt='n',horizontal=TRUE,ylim=c(250,278),col=k+1,outline=FALSE)\n  axis(2, labels=z,at=c(1:7))\n  \n  dtdz_profile=matrix(NA,length(deep_and_shallow[[i]]),6)\n  for (heights in 1:6){\n    dtdz_profile[,heights]=(T_profile[,heights+1]-T_profile[,heights])/(z[heights+1]-z[heights])\n  }\n  boxplot(dtdz_profile,ylab='Height (m)',xlab='dT/dz',yaxt='n',horizontal=TRUE,ylim=c(-0.1,1.2),col=k+1,outline=FALSE)\n\n  boxplot(W_profile,ylab='Height (m)',xlab='Wsp (m/s)',yaxt='n',horizontal=TRUE,ylim=c(0,15),col=k+1,outline=FALSE)\n  axis(2, labels=z,at=c(1:7))\n  boxplot(dir_profile,ylab='Height (m)',xlab='Max dir change',yaxt='n',horizontal=TRUE,ylim=c(0,180),col=k+1,outline=FALSE)\n  axis(2, labels=z,at=c(1:7))\n  shear_profile=matrix(NA,length(deep_and_shallow[[i]]),6)\n  for (heights in 1:6){\n    shear_profile[,heights]=(W_profile[,heights+1]-W_profile[,heights])/(z[heights+1]-z[heights])\n  }\n  boxplot(shear_profile,ylab='Height (m)',xlab='Shear',yaxt='n',horizontal=TRUE,ylim=c(-0.1,1.2),col=k+1)\n  pp=round(sapply(c(1:6),function(i){sum(na.exclude(shear_profile[,i])<0)/length(na.exclude(shear_profile[,i]))}),2)\n  axis(2, labels=z[2:7],at=c(1:6))\n   for (i in 1:6){\n  text(1,i,pp[i])}\n  boxplot(intensity,ylab='Height (m)',xlab='T intensity',yaxt='n',horizontal=TRUE,outline=FALSE,col=k+1,ylim=c(0,6))\n  axis(2, labels=z,at=c(1:7))\n  boxplot(Wintensity,ylab='Height (m)',xlab='W intensity',yaxt='n',horizontal=TRUE,outline=FALSE,col=k+1,ylim=c(0,9))\n  axis(2, labels=z,at=c(1:7))\n  boxplot(wintensity,ylab='Height (m)',xlab='w intensity',yaxt='n',horizontal=TRUE,outline=FALSE,col=k+1,ylim=c(0,3))\n  axis(2, labels=z,at=c(1:7))\n  boxplot(flux_profile_6s,ylab='Height (m)',xlab='FluxwT',yaxt='n',horizontal=TRUE,col=k+1,ylim=c(-0.06,0.01),outline=FALSE)\n  axis(2, labels=z,at=c(1:7))\n  boxplot(fluxww_profile_6s,ylab='Height (m)',xlab='Fluxww',yaxt='n',horizontal=TRUE,col=k+1,ylim=c(0,0.3),outline=FALSE)\n  axis(2, labels=z,at=c(1:7))\n  \n  }}\n  \n```\n\n### Pairwise hypothesis test for pca features\n``` {r pairwise_pca, fig.width=36,fig.height=22,message=FALSE,cache=TRUE,echo=FALSE}\nfor (i in 1:5){\nprint(paste(i,' th pca'))\nprint(pairwise.t.test(pc.cr$scores[,i], cc$cluster))}\n```\n\n### Pairwise hypothesis test for original features\n``` {r pairwise_mes, fig.width=36,fig.height=22,message=FALSE,cache=TRUE,echo=FALSE,tidy=TRUE}\nfor (i in 1:10){\nprint(colnames(casemeasures)[i])\nprint(pairwise.t.test(tranmeasures[,i], cc$cluster))}\n```\n",
    "created" : 1395481691051.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1746238828",
    "id" : "7BC519DA",
    "lastKnownWriteTime" : 1394412267,
    "path" : "~/Documents/Conferences&Presentations/FLOSS_paper/FLOSS_paper_0125/flosspaper0125.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}